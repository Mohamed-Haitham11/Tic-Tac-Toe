name: TicTacToe Qt CI/CD

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest] 
        # Uncomment if you want to build for Windows as well:
        # os: [ubuntu-latest, windows-latest] 

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Set up Qt # Installs the specified Qt version and modules
      uses: jurplel/install-qt-action@v3
      with:
        version: 5.15.2 # Ensure this matches your local Qt 5 version.
        # CORRECTED: Specifying core modules explicitly.
        # 'Core' (for QtCore), 'Gui' (for QtGui), 'Widgets' (for QtWidgets),
        # and 'Sql' (for QtSql) are commonly needed.
        modules: 'Core Gui Widgets Sql' # Use these specific module names
        # You might need to add more modules if your project uses them (e.g., Network, PrintSupport, Quick).

    - name: Generate Makefile using qmake
      run: qmake Final.pro

    - name: Build project
      run: make -j$(nproc)

    - name: Run simple test (optional)
      run: ./tictactoe || true

    - name: Upload built binary as artifact
      uses: actions/upload-artifact@v4
      with:
        name: tictactoe-qt-build-${{ matrix.os }}
        path: tictactoe 

  release:
    needs: build
    if: github.event_name == 'push' && github.ref == 'refs/heads/main' && success()
    runs-on: ubuntu-latest 

    permissions:
      contents: write 

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Download built binary artifact (Ubuntu)
      uses: actions/download-artifact@v4
      with:
        name: tictactoe-qt-build-ubuntu-latest
        path: .

    - name: Get current date for release tag
      id: date
      run: echo "RELEASE_DATE=$(date +'%Y.%m.%d-%H%M')" >> "$GITHUB_OUTPUT"

    - name: Create GitHub Release
      id: create_release
      uses: softprops/action-gh-release@v1
      with:
        tag_name: v${{ steps.date.outputs.RELEASE_DATE }}-${{ github.sha }}
        name: Release ${{ steps.date.outputs.RELEASE_DATE }} (Ubuntu)
        body: |
          Automated release of the TicTacToe Qt application for Ubuntu.
          This release contains the binary built from commit `${{ github.sha }}`.

          **Important Note for Distribution:**
          This artifact is the executable file. For your Qt application to run on
          other machines (especially those without Qt installed), you will typically
          need to bundle it with the necessary Qt shared libraries. On Linux, tools like
          `linuxdeployqt` can help with this. For Windows, `windeployqt.exe` is used.
          This workflow currently only uploads the executable itself.
        draft: false
        prerelease: false
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    - name: Upload Release Asset (Ubuntu)
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./tictactoe
        asset_name: tictactoe-ubuntu-latest
        asset_content_type: application/octet-stream
